version: '3.4'
services:
  web:
    build: cloudpebble/
    restart: always
    ports:
    - "80:80"
    volumes:
      - "./cloudpebble/:/code"
      - "./data/node_modules/:/code/node_modules" 
      - "./data/pnpm-store/:/code/.pnpm-store"
    links:
      - redis
      - postgres
      - s3
      - qemu
      - ycmd
    env_file:
      - ./.env
    environment:
      - DEBUG="yes"
      - RUN_WEB="yes"
      - AWS_ENABLED="yes"
      - PORT=80
      - AWS_S3_FAKE_S3=45.63.70.93:8003
      - MEDIA_URL=http://45.63.70.93:8003/builds.cloudpebble.net/
      - QEMU_URLS=http://45.63.70.93:8001/
      - YCM_URLS=http://45.63.70.93:8002/
      - PUBLIC_URL=http://45.63.70.93/
      - LIBPEBBLE_PROXY=wss://cloudpebble-ws-proxy-1.herokuapp.com/tool
      - PEBBLE_AUTH_URL=https://auth.rebble.io
  celery:
    build: cloudpebble/
    restart: always
    volumes:
      - "./cloudpebble/:/code"
      - "./data/node_modules/:/code/node_modules" 
      - "./data/pnpm-store/:/code/.pnpm-store"
    links:
      - redis
      - postgres
      - s3
    env_file:
      - ./.env
    environment:
      - DEBUG="yes"
      - RUN_CELERY="yes"
      - AWS_ENABLED=yes
      - EXPORT_ROOT=http://45.63.70.93:8003/export.cloudpebble.net/
      - AWS_S3_FAKE_S3=45.63.70.93:8003
  qemu:
    image: gfunkmonk/cloudpebble:qemu
    #build: cloudpebble-qemu-controller/
    restart: unless-stopped
    volumes:
      - "./cloudpebble-qemu-controller/:/code"
    env_file:
      - ./.env
    ports:
      - "8001:80"
  ycmd:
    image: gfunkmonk/cloudpebble:ycmd
    #build: cloudpebble-ycmd-proxy/
    restart: unless-stopped
    volumes:
      - "./cloudpebble-ycmd-proxy/:/code"
    env_file:
      - ./.env  
    ports:
      - "8002:80"
  redis:
    image: redis:3.0.6-alpine
    #image: redis
    restart: always
    volumes:
      - "./data/redis:/data"
      #- "./data/redis:/var/lib/redis/"
    ports:
      - 6379:6379
  postgres:
    image: postgres:10-alpine
    #image: postgres
    restart: always
    volumes: 
      - "./data/postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
  s3:
    #image: lphoward/fake-s3
    image: gfunkmonk/fakes3:latest
    #build: fakes3/
    restart: always
    volumes:
      - "./data/fakes3/:/fakes3_root"
    env_file:
      - ./.env
    ports:
      - "8003:4569"
  memecached:
    #image: memcached:latest
    image: gfunkmonk/memcached:latest
    #build: ./memcached/
    restart: unless-stopped
    ports:
      - "11211:11211"
